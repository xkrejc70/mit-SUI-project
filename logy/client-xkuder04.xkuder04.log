Traceback (most recent call last):
  File "./scripts/client.py", line 63, in <module>
    main()
  File "./scripts/client.py", line 55, in main
    ai.run()
  File "/home/xsojka04/projects/SUI/repo/dicewars/client/ai_driver.py", line 111, in run
    command = self.ai.ai_turn(
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/xkuder04.py", line 81, in ai_turn
    if x:= self.part_attack(board, time_left): return x
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/xkuder04.py", line 140, in part_attack
    move, evaluation = self.mattack.best_result(board, time_left, self.start_turn_time)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 26, in best_result
    return self.best_result_for_given_depth(board, self.player_index, self.depth)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 34, in best_result_for_given_depth
    if x:= self.part_recursive(reasonable_attacks, depth, board, player_index): return x
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 74, in part_recursive
    _, result_win = self.best_result_for_given_depth(board_win, (player_index + 1) % len(self.players_order), depth - 1)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 34, in best_result_for_given_depth
    if x:= self.part_recursive(reasonable_attacks, depth, board, player_index): return x
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 78, in part_recursive
    _, result_loss = self.best_result_for_given_depth(board_loss, (player_index + 1) % len(self.players_order), depth - 1)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 34, in best_result_for_given_depth
    if x:= self.part_recursive(reasonable_attacks, depth, board, player_index): return x
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 74, in part_recursive
    _, result_win = self.best_result_for_given_depth(board_win, (player_index + 1) % len(self.players_order), depth - 1)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 34, in best_result_for_given_depth
    if x:= self.part_recursive(reasonable_attacks, depth, board, player_index): return x
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 65, in part_recursive
    _, result_win = self.best_result_for_given_depth(board_win, (player_index + 1) % len(self.players_order), depth - 1)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/Mattack.py", line 30, in best_result_for_given_depth
    reasonable_attacks = resonable_attacks_for_player(self.players_order[player_index], board)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/utils/utils.py", line 30, in resonable_attacks_for_player
    joined_probability = probability_of_successful_attack_and_one_turn_hold(player, board, area, adjacent_area)
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/utils/utils.py", line 42, in probability_of_successful_attack_and_one_turn_hold
    move_board = simulate_succesfull_move(player, board, area.get_name(), adjacent_area.get_name())
  File "/home/xsojka04/projects/SUI/repo/dicewars/ai/xkuder04/utils/utils.py", line 220, in simulate_succesfull_move
    edited_board = pickle.loads(pickle.dumps(board))
KeyboardInterrupt
